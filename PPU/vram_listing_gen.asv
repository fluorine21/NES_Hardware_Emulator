
filename = "vram_listing.svh";

%fid = edit(filename);

fid = fopen(filename, 'wt');
if fid ~= -1
    %Generate the listing
    gen_vram(fid)
    
    fclose(fid);
else
    warningMessage = sprintf('Cannot open file %s', filename);
    uiwait(warndlg(warningMessage));
end


function gen_vram(vram_file)

fprintf(vram_file, "`ifndef _my_incl_vh_\n `define _my_incl_vh_\n\n\n");

%Payload goes here
gen_payload(vram_file);

fprintf(vram_file, "`endif\n\n //_my_incl_vh");

end

function gen_payload(vram_file)

%Payload preamble
fprintf(vram_file, "integer vram_listing[] = \n{\n\n\n");


%Pattern table 1 will be alternating solid transparent blocks
%2000 hes is
for i = 1 : hex2dec('2000')
    
    if(mod(round((i+8)/16), 2))
        write_value(vram_file, i, 'FFFF',0);
    else
        write_value(vram_file, i, 0,0);
    end
    
end

%nametables0
for i = hex2dec('2000'):hex2dec('23FF')
    
    if(i < hex2dec('23C0'))
       write_value(vram_file, i, '00AA', 0);
    else
       write_value(vram_file, i, '0000', 0);
    end
    
end

%nametable1
for i = hex2dec('2400'):hex2dec('27FF')
    
    if(i < hex2dec('27C0'))
       write_value(vram_file, i, '00BB', 0);
    else
       write_value(vram_file, i, '0011', 0);
    end
    
end

%nametables2
for i = hex2dec('2800'):hex2dec('2BC0')
    
    %Select first tile
    write_value(vram_file, i, '0002',0);
    
end

%nametables3
for i = hex2dec('2C00'):hex2dec('2EC0')
    
    %Select first tile
    write_value(vram_file, i, '0003',0);
    
end

%Color table
for i = hex2dec('3F00'):hex2dec('3F1F')
    
    if(i == hex2dec('3F1F'))
        %Select first tile
        write_value(vram_file, i, (mod(i,16)), 1);
        
    else
        %Select first tile
        write_value(vram_file, i, (mod(i,16)), 0);
        
    end
    
end

%Payload ending
fprintf(vram_file, "\n\n\n};\n");


end

function write_value(vram_file, addr, value, isend)

val_new = value;
if(~ischar(value))
    val_new = dec2hex(value, 4);
end
if(isend) 
    
fprintf(vram_file, "16'h%s, 16'h%s\n", dec2hex(addr, 4), val_new);
    
else

fprintf(vram_file, "16'h%s, 16'h%s,\n", dec2hex(addr, 4), val_new);

end

end